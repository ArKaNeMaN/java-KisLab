{
	"info": {
		"_postman_id": "e34fdd79-78eb-4fbc-8927-954c86c901d1",
		"name": "KisLab",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18465161"
	},
	"item": [
		{
			"name": "Add Plugin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const created_index = pm.response.json().id;\r",
							"pm.collectionVariables.set(\"created_index\", created_index);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Vip Modular\",\r\n    \"description\": \"Modular privileges system for AmxModX\",\r\n    \"version\": \"5.0.0-beta.99\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{service_host}}/plugins",
					"host": [
						"{{service_host}}"
					],
					"path": [
						"plugins"
					]
				}
			},
			"response": []
		},
		{
			"name": "Plugins List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{service_host}}/plugins",
					"host": [
						"{{service_host}}"
					],
					"path": [
						"plugins"
					]
				}
			},
			"response": []
		},
		{
			"name": "Created plugin exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const created_index = pm.collectionVariables.get(\"created_index\");\r",
							"pm.test(\"Entity created\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.id).to.equals(created_index);\r",
							"    pm.expect(res.name).to.equals(\"Vip Modular\");\r",
							"    pm.expect(res.description).to.equals(\"Modular privileges system for AmxModX\");\r",
							"    pm.expect(res.version).to.equals(\"5.0.0-beta.99\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{service_host}}/plugins/{{created_index}}",
					"host": [
						"{{service_host}}"
					],
					"path": [
						"plugins",
						"{{created_index}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Plugin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Updated name\",\r\n    \"description\": \"Updated description\",\r\n    \"version\": \"Updated version\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{service_host}}/plugins/{{created_index}}",
					"host": [
						"{{service_host}}"
					],
					"path": [
						"plugins",
						"{{created_index}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Plugin updated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const created_index = pm.collectionVariables.get(\"created_index\");\r",
							"pm.test(\"Entity updated\", () => {\r",
							"    const res = pm.response.json();\r",
							"    pm.expect(res.id).to.equals(created_index);\r",
							"    pm.expect(res.name).to.equals(\"Updated name\");\r",
							"    pm.expect(res.description).to.equals(\"Updated description\");\r",
							"    pm.expect(res.version).to.equals(\"Updated version\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{service_host}}/plugins/{{created_index}}",
					"host": [
						"{{service_host}}"
					],
					"path": [
						"plugins",
						"{{created_index}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Plugin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Vip Modular\",\r\n    \"description\": \"Modular privileges system for AmxModX\",\r\n    \"version\": \"5.0.0-beta.5\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{service_host}}/plugins/{{created_index}}",
					"host": [
						"{{service_host}}"
					],
					"path": [
						"plugins",
						"{{created_index}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Plugin deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{service_host}}/plugins/{{created_index}}",
					"host": [
						"{{service_host}}"
					],
					"path": [
						"plugins",
						"{{created_index}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "service_host",
			"value": "localhost:8080",
			"type": "string"
		},
		{
			"key": "created_index",
			"value": ""
		}
	]
}